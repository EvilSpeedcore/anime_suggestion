# pattern_matching.krb

getting_started
    use getting_started()
    when
        python engine.get_ke('questions', 'media_you_like_the_most').reset()
        define_favorite_media()

# --tv shows block--

tv_shows
    use define_favorite_media()
    when
        questions.media_you_like_the_most(1)
        define_type_of_anime()

combination_of_visuals_and_story
    use define_type_of_anime()
    when
        questions.choose_the_menu(3)
        try_again()

visually_stunning
    use define_type_of_anime()
    when
        questions.choose_the_menu(1)
        defining_kill_bill_fan()

kill_bill_fan
    use defining_kill_bill_fan()
    when
        questions.fan_of_kill_bill(1)
        try_again()

not_a_kill_bill_fan
    use defining_kill_bill_fan()
    when
        questions.fan_of_kill_bill(2)
        define_what_to_mine()

define_what_to_mine
    use define_what_to_mine()
    when
        questions.what_to_mine($ans)
        try_again()

has_a_great_story_to_tell
    use define_type_of_anime()
    when
        questions.choose_the_menu(2)
        define_institute_to_return_to()

returning_to_institute
    use define_institute_to_return_to()
    when
        questions.trap_card($ans)
        check $ans in (1, 2)
        try_again()

not_returning_to_institute
    use define_institute_to_return_to()
    when
        questions.trap_card($ans)
        visit_psychiatrist()

visit_psychiatrist
    use visit_psychiatrist()
    when
        questions.want_to_talk_about_it($ans)
        try_again()

# --films block--

films
    use define_favorite_media()
    when
        questions.media_you_like_the_most(2)
        choose_topic_of_the_presentation()

predicting_future
    use choose_topic_of_the_presentation()
    when
        questions.choose_topic(3)
        coffee()

life_after_death
    use choose_topic_of_the_presentation()
    when
        questions.choose_topic(4)
        art_house()

falling_asleep_in_train
    use choose_topic_of_the_presentation()
    when
        questions.choose_topic(1)
        sex_life_status()

long_distance_relationship
    use sex_life_status()
    when
        questions.how_is_your_sex_life(1)
        age_status()

define_age
    use age_status()
    when
        questions.how_old_are_you($ans)
        try_again()

love_with_older_woman
    use sex_life_status()
    when
        questions.how_is_your_sex_life(2)
        try_again()

living_multiple_lives
    use choose_topic_of_the_presentation()
    when
        questions.choose_topic(2)
        christmas_status()

christmas_in_near
    use christmas_status()
    when
        questions.is_christmas_near(1)
        try_again()

christmas_in_not_near
    use christmas_status()
    when
        questions.is_christmas_near(2)
        synopsis()

choose_synopsis
    use synopsis()
    when
        questions.choose_synopsis($ans)
        try_again()

coffee
    use coffee()
    when
        questions.how_do_you_like_your_coffee($ans)
        try_again()

art_house
    use art_house()
    when
        questions.what_about_art_house($ans)
        try_again()

# --animation movies block--

animation_movies
    use define_favorite_media()
    when
        questions.media_you_like_the_most(3)
        philosophical_subject()

realism_philosophical_subject
    use philosophical_subject()
    when
        questions.philosophical_subject(1)
        world_to_visit()

humanism_philosophical_subject
    use philosophical_subject()
    when
        questions.philosophical_subject(2)
        jazz_band_name()

define_band_name
    use jazz_band_name()
    when
        questions.jazz_band_name($ans)
        try_again()

define_world_to_visit
    use world_to_visit()
    when
        questions.worlds_to_visit($ans)
        try_again()

try_again
    use try_again()
    when
        questions.try_again(1)
        python print("Here we go again.")
        getting_started()

do_not_try_again
    use try_again()
    when
        questions.try_again(2)